// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	// Figure out which of the 8 RAM8 chips to select
	DMux8Way(in=load, sel=address[3..5], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
	
	// address[0..2] here stores the address we want to hit in the RAM8 chips
    RAM8(in=in, load=load1, address=address[0..2], out=o1);
	RAM8(in=in, load=load2, address=address[0..2], out=o2);
	RAM8(in=in, load=load3, address=address[0..2], out=o3);
	RAM8(in=in, load=load4, address=address[0..2], out=o4);
	RAM8(in=in, load=load5, address=address[0..2], out=o5);
	RAM8(in=in, load=load6, address=address[0..2], out=o6);
	RAM8(in=in, load=load7, address=address[0..2], out=o7);
	RAM8(in=in, load=load8, address=address[0..2], out=o8);
	
	Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address[3..5], out=out);
}
